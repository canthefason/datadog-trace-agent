#!/bin/sh
#
# chkconfig: 345 85 15
# description: Datadog Tracing Agent

### BEGIN INIT INFO
# Provides: dd-trace-agent
# Short-Description: Start and stop dd-trace-agent
# Description: dd-trace-agent is the tracing Agent component for Datadog
# Required-Start: $remote_fs
# Required-Stop: $remote_fs
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
### END INIT INFO

PATH=$PATH:/sbin # add the location of start-stop-daemon on Debian
TRACE_PIDFILE=/opt/datadog-agent/run/dd-trace-agent.pid
DAEMON=/opt/datadog-agent/bin/trace-agent


# Source function library.
. /etc/rc.d/init.d/functions

makePid() {
    echo `ps auxf | grep -v grep | grep $1 | awk '{print $2}'` > $TRACE_PIDFILE
}

start() {
    # no need to test for status before daemon,
    # the daemon function does the right thing
    if [ -f $TRACE_PIDFILE ]; then
            PID=`cat $TRACE_PIDFILE`
            echo dd-trace-agent already running: $PID
            exit 2;
    else
        echo "Starting dd-trace-agent"
        daemon --pidfile $TRACE_PIDFILE --user dd-agent "nohup $DAEMON 2>&1 &"
        [ $? -eq 0 ] && makePid $DAEMON
    fi
    echo
    return $?
}

stop() {
    # no need to test for status before killproc,
    # it does the right thing. and testing supervisorctl status
    # before killproc can lead to states where you cannot stop!
    echo -n 'Stopping dd-trace-agent (using killproc): '
    killproc -p $TRACE_PIDFILE -d 30
    echo
    return 0
}

restart() {
    stop
    start
}

case "$1" in
   start)
        start
        ;;

    stop)
        stop
        ;;

    restart)
        restart
        ;;

    status)
        status -p "$TRACE_PIDFILE" dd-trace-agent
        ;;

esac

exit $?
